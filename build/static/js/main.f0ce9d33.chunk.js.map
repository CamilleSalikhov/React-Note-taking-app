{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/layout/Header.js","components/AddTodo.js","App.js","serviceWorker.js","index.js"],"names":["btnStyle","background","borderRadius","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","textDecoration","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","title","react_default","a","createElement","style","padding","margin","border","type","onChange","markComplete","bind","onClick","deleteTodo","Component","Todos","todos","map","e","components_TodoItem","React","Header","headerStyle","backgroundColor","color","AddTodo","state","setState","target","onSubmit","preventDefault","addTodo","className","flex","name","placeholder","App","uuid","v4","filter","newTodo","toConsumableArray","components_AddTodo","Todos_Todos","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0ce9d33.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst btnStyle = {\r\n    background:'red',\r\n    borderRadius:'50%'\r\n}\r\nexport class TodoItem extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            background:'grey',\r\n            textDecoration: this.props.todo.completed ? \r\n            'line-through' : 'none'\r\n        }\r\n    } \r\n  render() {\r\n      const {id, title} = this.props.todo;\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        <p style={{padding : '0',\r\n    margin : '0',\r\n    border:'1px solid black'}}><input type='checkbox' onChange = {this.props.markComplete.bind(this,id)}></input>\r\n        {this.props.todo.title} \r\n        <button onClick ={this.props.deleteTodo.bind(this,id)} style = {btnStyle}>x</button>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nexport default TodoItem\r\n","import React  from 'react';\r\nimport TodoItem from './TodoItem'\r\nimport PropTypes from 'prop-types'\r\nexport default class Todos extends React.Component {\r\n    \r\n     \r\n    render() {\r\n        return this.props.todos.map((e) => (\r\n            <TodoItem key={e.id}  todo = {e} markComplete = {this.props.markComplete} deleteTodo ={this.props.deleteTodo} />\r\n        ))\r\n    }\r\n}\r\nTodos.propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    deleteTodo: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header>\r\n      <h1 style ={headerStyle}>Todolist</h1>\r\n    </header>\r\n  )\r\n}\r\nconst headerStyle = {\r\n  backgroundColor: 'black',\r\n  color:'white',\r\n  margin:'0',\r\n  \r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class AddTodo extends Component {\r\n    state= {\r\n        title:''\r\n    }\r\n    onChange = (e) => this.setState({title: e.target.value})\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title);\r\n        this.setState({title:''});\r\n    }\r\n  render() {\r\n    return (\r\n      <form className='form' onSubmit={this.onSubmit}>\r\n          <input type='text' style={{flex:'10'}} name='title' placeholder='Add todo!' onChange={this.onChange}></input>\r\n          <input type='submit' className='btn' value='submit' ></input>\r\n\r\n      </form>\r\n    )\r\n  }\r\n}\r\nAddTodo.propTypes = {\r\n    addTodo:PropTypes.func.isRequired\r\n     \r\n} \r\n\r\nexport default AddTodo\r\n","import React from 'react';\nimport './App.css';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport uuid from 'uuid';\nclass App extends React.Component {\n  state = {\n    todos: [\n      {\n        id:uuid.v4(),\n        title: 'do 1 thing',\n        completed:false\n      }\n      ,{\n        id:uuid.v4(),\n        title: 'do 2 thing',\n        completed:true\n      },\n      {\n        id:uuid.v4(),\n        title: 'do 3 thing',\n        completed:false\n      }\n    ]\n  }\n  markComplete =(id) => {\n    this.setState({todos: this.state.todos.map(todo => {\n      if(todo.id === id) {\n        todo.completed = !todo.completed\n      } return todo\n    })});\n  }\n  deleteTodo = (id) => {\n    this.setState({\n      todos: this.state.todos.filter(todo => todo.id!== id)\n    })\n  }\n  addTodo = (title) => {\n    const newTodo = {\n      id:uuid.v4(),\n      title,\n      completed:false\n    }\n    this.setState({\n      todos:[...this.state.todos, newTodo]\n    })\n  }\n\n  \n  render() {\n    \n      return (\n          <div className='App'>\n          <Header />\n          <AddTodo addTodo={this.addTodo} />\n          <Todos todos={this.state.todos} markComplete = {this.markComplete} deleteTodo ={this.deleteTodo} />\n          </div>\n      );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}